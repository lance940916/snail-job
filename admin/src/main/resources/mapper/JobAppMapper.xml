<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snailwu.job.admin.mapper.JobAppMapper">
    <resultMap id="BaseResultMap" type="com.snailwu.job.admin.model.JobApp">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="app_name" jdbcType="VARCHAR" property="appName"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="addresses" jdbcType="VARCHAR" property="addresses"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from job_app
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.snailwu.job.admin.model.JobApp">
        insert into job_app (id, app_name, title,
                             type, addresses, create_time,
                             update_time)
        values (#{id,jdbcType=INTEGER}, #{appName,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR},
                #{type,jdbcType=TINYINT}, #{addresses,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.snailwu.job.admin.model.JobApp">
        update job_app
        set app_name    = #{appName,jdbcType=VARCHAR},
            title       = #{title,jdbcType=VARCHAR},
            type        = #{type,jdbcType=TINYINT},
            addresses   = #{addresses,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateAddressesById" parameterType="com.snailwu.job.admin.model.JobApp">
        update job_app
        set addresses   = #{addresses,jdbcType=VARCHAR},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id, app_name, title, type, addresses, create_time, update_time
        from job_app
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, app_name, title, type, addresses, create_time, update_time
        from job_app
    </select>
    <select id="selectAutoRegistry" parameterType="byte" resultMap="BaseResultMap">
        select id, app_name
        from job_app
        where type = #{type}
    </select>
    <select id="selectByAppName" parameterType="string" resultMap="BaseResultMap">
        select id, addresses
        from job_app
        where app_name = #{appName}
        limit 1
    </select>
    <select id="selectByCondition" resultMap="BaseResultMap">
        select id, app_name, title, type, addresses, create_time, update_time
        from job_app
        <where>
            <if test="title != null and title != ''">
                and title = #{title}
            </if>
            <if test="app_name != null and app_name != ''">
                and app_name = #{appName}
            </if>
        </where>
    </select>
</mapper>